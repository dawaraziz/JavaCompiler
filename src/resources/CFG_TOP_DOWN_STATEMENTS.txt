46
PLA1
PLA10
PLA11
PLA101
PLA1010
PLA10101
PLA101010
PLA1010101
PLA10101010
BOF
EOF
package
VARIABLE_ID
import
=
if
else
void
abstract
while
static
for
public
implements
native
extends
(
)
return
protected
class
interface
final
;
.
,
{
}
[
]
boolean
char
byte
int
short
*
70
S
H
BLOCK
EXPRESSIONopt
PACKAGEopt
PACKAGE
STATEMENT
MULT_IMPORTopt
CLASS_MODIFIER
MULT_IMPORT
IMPORT
TYPE_NAME
TYPE_DECLARATIONopt
TYPE_DECLARATION
EXTENDSopt
CLASS_DECLARATION
CLASS_OR_INTERFACE
CLASS_MODIFIERS
INTERFACE_LIST
EXTENDS
IMPLEMENTS
CLASS_BODY
IMPLEMENTSopt
METHOD_DECLARATION
PROPERTY_DECLARATION
METHOD_OR_PROPERTY_DECLARATION
METHOD_OR_PROPERTY_MODIFIERS
METHOD_OR_PROPERTY_MODIFIER
METHOD_OR_PROPERTY
PROPERTY_MODIFIER
PROPERTY_MODIFIERS
TYPE
PROPERTY_INSTANTIATION
EXPRESSION
PRIM_TYPE
NON_ARRAY_TYPE
NUM_TYPE
METHOD_MODIFIERS
RETURN_TYPE
METHOD_DECLARATOR
METHOD_IMPLEMENTATION
METHOD_MODIFIER
METHOD_PARAMSopt
METHOD_PARAMS
METHOD_PARAM
CONDITIONAL_OR_EXPRESSION
LEFT_HAND_SIDE
BLOCK_STATEMENTSopt
BLOCK_STATEMENTS
BLOCK_STATEMENT
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT
IF_STATEMENT
IF_ELSE_STATEMENT
WHILE_STATEMENT
FOR_STATEMENT
EXPRESSION_STATEMENT
STATEMENT_NO_SHORT_IF
IF_ELSE_STATEMENT_NO_SHORT_IF
WHILE_STATEMENT_NO_SHORT_IF
FOR_STATEMENT_NO_SHORT_IF
ASSIGNMENT_EXPRESSION
ASSIGNMENT
METHOD_INVOCATION
CLASS_INSTANCE_CREATION_EXPRESSION
LOCAL_VARIABLE_DECLARATION
FOR_INITopt
FOR_INIT
FOR_UPDATEopt
ASSIGNMENT_X
RETURN_STATEMENT
S
116
S BOF H EOF
H PACKAGEopt MULT_IMPORTopt TYPE_DECLARATIONopt
PACKAGEopt PACKAGE
PACKAGEopt
PACKAGE VARIABLE_ID package ;
MULT_IMPORTopt MULT_IMPORT
MULT_IMPORTopt
MULT_IMPORT IMPORT
MULT_IMPORT MULT_IMPORT IMPORT
IMPORT import TYPE_NAME ;
IMPORT import TYPE_NAME . * ;
TYPE_NAME  VARIABLE_ID
TYPE_NAME  TYPE_NAME . VARIABLE_ID
TYPE_DECLARATIONopt TYPE_DECLARATION
TYPE_DECLARATIONopt
TYPE_DECLARATION CLASS_DECLARATION
TYPE_DECLARATION ;
CLASS_DECLARATION CLASS_MODIFIERS CLASS_OR_INTERFACE VARIABLE_ID EXTENDSopt IMPLEMENTSopt { CLASS_BODY }
CLASS_MODIFIERS CLASS_MODIFIER CLASS_MODIFIERS
CLASS_MODIFIERS CLASS_MODIFIER
CLASS_MODIFIER abstract
CLASS_MODIFIER static
CLASS_MODIFIER public
CLASS_MODIFIER final
CLASS_OR_INTERFACE class
CLASS_OR_INTERFACE interface
EXTENDSopt EXTENDS
EXTENDSopt
EXTENDS extends TYPE_NAME
IMPLEMENTSopt IMPLEMENTS
IMPLEMENTSopt
IMPLEMENTS implements INTERFACE_LIST
INTERFACE_LIST TYPE_NAME
INTERFACE_LIST TYPE_NAME , INTERFACE_LIST
CLASS_BODY METHOD_OR_PROPERTY_DECLARATION CLASS_BODY
CLASS_BODY ; CLASS_BODY
CLASS_BODY
METHOD_OR_PROPERTY_DECLARATION METHOD_OR_PROPERTY_MODIFIERS RETURN_TYPE VARIABLE_ID METHOD_OR_PROPERTY
METHOD_OR_PROPERTY_MODIFIERS METHOD_OR_PROPERTY_MODIFIER
METHOD_OR_PROPERTY_MODIFIERS METHOD_OR_PROPERTY_MODIFIER METHOD_OR_PROPERTY_MODIFIERS
METHOD_OR_PROPERTY_MODIFIER static
METHOD_OR_PROPERTY_MODIFIER abstract
METHOD_OR_PROPERTY_MODIFIER public
METHOD_OR_PROPERTY_MODIFIER final
METHOD_OR_PROPERTY_MODIFIER protected
METHOD_OR_PROPERTY_MODIFIER native
METHOD_OR_PROPERTY METHOD_DECLARATION ;
METHOD_OR_PROPERTY PROPERTY_DECLARATION ;
PROPERTY_DECLARATION = EXPRESSION
PROPERTY_DECLARATION
METHOD_DECLARATION METHOD_DECLARATOR METHOD_IMPLEMENTATION
TYPE PRIM_TYPE [ ]
TYPE VARIABLE_ID [ ]
TYPE NON_ARRAY_TYPE
NON_ARRAY_TYPE VARIABLE_ID
NON_ARRAY_TYPE PRIM_TYPE
PRIM_TYPE boolean
PRIM_TYPE NUM_TYPE
PRIM_TYPE char
NUM_TYPE byte
NUM_TYPE int
NUM_TYPE short
METHOD_DECLARATOR ( METHOD_PARAMSopt )
METHOD_PARAMSopt METHOD_PARAMS
METHOD_PARAMSopt
METHOD_PARAMS METHOD_PARAM
METHOD_PARAMS METHOD_PARAM , METHOD_PARAMS
METHOD_PARAM TYPE VARIABLE_ID
METHOD_IMPLEMENTATION BLOCK
METHOD_IMPLEMENTATION ;
RETURN_TYPE TYPE
RETURN_TYPE void
BLOCK { BLOCK_STATEMENTSopt }
BLOCK_STATEMENTSopt BLOCK_STATEMENTS
BLOCK_STATEMENTSopt
BLOCK_STATEMENTS BLOCK_STATEMENT
BLOCK_STATEMENTS BLOCK_STATEMENTS BLOCK_STATEMENT
BLOCK_STATEMENT TYPE VARIABLE_ID = EXPRESSION
BLOCK_STATEMENT STATEMENT
STATEMENT STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT
STATEMENT IF_STATEMENT
STATEMENT IF_ELSE_STATEMENT
STATEMENT WHILE_STATEMENT
STATEMENT FOR_STATEMENT
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT BLOCK
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT ;
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT EXPRESSION_STATEMENT
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT RETURN_STATEMENT
STATEMENT_NO_SHORT_IF STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT
STATEMENT_NO_SHORT_IF IF_ELSE_STATEMENT_NO_SHORT_IF
STATEMENT_NO_SHORT_IF WHILE_STATEMENT_NO_SHORT_IF
STATEMENT_NO_SHORT_IF FOR_STATEMENT_NO_SHORT_IF
EXPRESSION_STATEMENT ASSIGNMENT ;
EXPRESSION_STATEMENT METHOD_INVOCATION ;
EXPRESSION_STATEMENT CLASS_INSTANCE_CREATION_EXPRESSION ;
IF_STATEMENT if ( EXPRESSION ) STATEMENT
IF_ELSE_STATEMENT if ( EXPRESSION ) STATEMENT_NO_SHORT_IF else STATEMENT
IF_ELSE_STATEMENT_NO_SHORT_IF if ( EXPRESSION ) STATEMENT_NO_SHORT_IF else STATEMENT_NO_SHORT_IF
WHILE_STATEMENT while ( EXPRESSION ) STATEMENT
WHILE_STATEMENT_NO_SHORT_IF while ( EXPRESSION ) STATEMENT_NO_SHORT_IF
FOR_STATEMENT for ( FOR_INITopt ; EXPRESSIONopt ; FOR_UPDATEopt ) STATEMENT
FOR_STATEMENT_NO_SHORT_IF for ( FOR_INITopt ; EXPRESSIONopt ; FOR_UPDATEopt ) STATEMENT_NO_SHORT_IF
LOCAL_VARIABLE_DECLARATION TYPE VARIABLE_ID PROPERTY_DECLARATION ;
FOR_INITopt FOR_INIT
FOR_INITopt
FOR_INIT LOCAL_VARIABLE_DECLARATION
FOR_INIT EXPRESSION_STATEMENT
FOR_UPDATEopt EXPRESSION_STATEMENT
FOR_UPDATEopt
RETURN_STATEMENT return EXPRESSIONopt
EXPRESSIONopt EXPRESSION
EXPRESSIONopt
EXPRESSION ASSIGNMENT_X
METHOD_INVOCATION PLA1
CLASS_INSTANCE_CREATION_EXPRESSION PLA10
ASSIGNMENT PLA1010
ASSIGNMENT_X PLA1010