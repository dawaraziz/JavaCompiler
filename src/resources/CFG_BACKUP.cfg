59
BOF
EOF
'!'
'%'
'&&'
'&'
'*'
'+'
','
'-'
'.'
'/'
';'
'<'
'<='
'='
'>'
'>='
'CHARACTER_LITERAL'
'FALSE'
'INTEGER_LITERAL'
'NULL'
'STRING_LITERAL'
'TRUE'
'VARIABLE_ID'
'['
']'
'abstract'
'boolean'
'byte'
'char'
'class'
'else'
'extends'
'final'
'for'
'if'
'implements'
'import'
'instanceof'
'int'
'interface'
'native'
'new'
'package'
'protected'
'public'
'return'
'short'
'static'
'super'
'this'
'void'
'while'
'{'
'|'
'||'
'}'
'~'
102
S
H
PACKAGEopt
MULT_IMPORTopt
TYPE_DECLARATIONopt
CLASS_NAME
PACKAGE_NAME
TYPE_NAME
EXPRESSION_NAME
AMBIGUOUS_NAME
METHOD_NAME
PACKAGE_OR_TYPE_NAME
LITERAL
REFERENCE_TYPE
CLASS_OR_INTERFACE_TYPE
CLASS_TYPE
INTERFACE_TYPE
ARRAY_TYPE
RETURN_TYPE
TYPE
NON_ARRAY_TYPE
PRIM_TYPE
NUM_TYPE
PACKAGE
MULT_IMPORT
IMPORT
TYPE_DECLARATION
INTERFACE_DECLARATION
INTERFACE_MODIFIERS
INTERFACE_MODIFIER
EXTENDS_INTERFACESopt
EXTENDS_INTERFACES
EXTENDS_INTERFACE
INTERFACE_BODYopt
INTERFACE_BODY
ABSTRACT_METHOD_DECLARATION
ABSTRACT_METHOD_MODIFIERSopt
ABSTRACT_METHOD_MODIFIERS
ABSTRACT_METHOD_MODIFIER
CLASS_DECLARATION
CLASS_MODIFIERS
CLASS_MODIFIER
SUPERopt
SUPER
INTERFACESopt
INTERFACES
INTERFACE_TYPE_LIST
CLASS_BODY
PROPERTY
PROPERTY_MODIFIERS
INSTANTIATION
METHOD
METHOD_MODIFIERS
METHOD_MODIFIER
METHOD_DECLARATOR
METHOD_PARAMSopt
METHOD_PARAMS
METHOD_PARAM
METHOD_IMPLEMENTATION
BLOCK
BLOCK_STATEMENTSopt
BLOCK_STATEMENTS
BLOCK_STATEMENT
STATEMENT
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT
STATEMENT_NO_SHORT_IF
EXPRESSION_STATEMENT
IF_STATEMENT
IF_ELSE_STATEMENT
IF_ELSE_STATEMENT_NO_SHORT_IF
WHILE_STATEMENT
WHILE_STATEMENT_NO_SHORT_IF
FOR_STATEMENT
FOR_STATEMENT_NO_SHORT_IF
FOR_INITopt
FOR_INIT
FOR_UPDATEopt
RETURN_STATEMENT
EXPRESSIONopt
EXPRESSION
ASSIGNMENT
LEFT_HAND_SIDE
CONDITIONAL_OR_EXPRESSION
INCLUSIVE_OR_EXPRESSION
AND_EXPRESSION
EQUALITY_EXPRESSION
RELATIONAL_EXPRESSION
ADDITIVE_EXPRESSION
MULTIPLICATIVE_EXPRESSION
UNARY_EXPRESSION
UNARY_EXPRESSION_NOT_PLUS_MINUS
CAST_EXPRESSION
POST_FIX_EXPRESSION
PRIMARY_EXPRESSION
PRIMARY_EXPRESSION_NO_NEW_ARRAY
CLASS_INSTANCE_CREATION_EXPRESSION
ARGUMENT_LISTopt
ARGUMENT_LIST
ARRAY_CREATION_EXPRESSION
FIELD_ACCESS
METHOD_INVOCATION
ARRAY_ACCESS
S
224
S BOF H EOF
H PACKAGEopt MULT_IMPORTopt TYPE_DECLARATIONopt
CLASS_NAME 'VARIABLE_ID'
PACKAGE_NAME 'VARIABLE_ID'
PACKAGE_NAME PACKAGE_NAME '.' 'VARIABLE_ID'
TYPE_NAME 'VARIABLE_ID'
TYPE_NAME PACKAGE_OR_TYPE_NAME '.' 'VARIABLE_ID'
EXPRESSION_NAME 'VARIABLE_ID'
EXPRESSION_NAME AMBIGUOUS_NAME '.' 'VARIABLE_ID'
METHOD_NAME 'VARIABLE_ID'
METHOD_NAME AMBIGUOUS_NAME '.' 'VARIABLE_ID'
PACKAGE_OR_TYPE_NAME 'VARIABLE_ID'
PACKAGE_OR_TYPE_NAME PACKAGE_OR_TYPE_NAME '.' 'VARIABLE_ID'
AMBIGUOUS_NAME 'VARIABLE_ID'
AMBIGUOUS_NAME AMBIGUOUS_NAME '.' 'VARIABLE_ID'
LITERAL 'INTEGER_LITERAL'
LITERAL 'CHARACTER_LITERAL'
LITERAL 'STRING_LITERAL'
LITERAL 'NULL'
LITERAL 'TRUE'
LITERAL 'FALSE'
REFERENCE_TYPE CLASS_OR_INTERFACE_TYPE
REFERENCE_TYPE ARRAY_TYPE
CLASS_OR_INTERFACE_TYPE CLASS_TYPE
CLASS_OR_INTERFACE_TYPE INTERFACE_TYPE
CLASS_TYPE TYPE
INTERFACE_TYPE TYPE
ARRAY_TYPE TYPE
RETURN_TYPE TYPE
RETURN_TYPE 'void'
TYPE PRIM_TYPE '[' ']'
TYPE 'VARIABLE_ID' '[' ']'
TYPE NON_ARRAY_TYPE
NON_ARRAY_TYPE 'VARIABLE_ID'
NON_ARRAY_TYPE PRIM_TYPE
PRIM_TYPE 'boolean'
PRIM_TYPE NUM_TYPE
PRIM_TYPE 'char'
NUM_TYPE 'byte'
NUM_TYPE 'int'
NUM_TYPE 'short'
PACKAGEopt PACKAGE
PACKAGEopt EPSILON
PACKAGE 'package' TYPE_NAME ';'
MULT_IMPORTopt MULT_IMPORT
MULT_IMPORTopt EPSILON
MULT_IMPORT IMPORT
MULT_IMPORT IMPORT MULT_IMPORT
IMPORT 'import' TYPE_NAME ';'
IMPORT 'import' TYPE_NAME '.' '*' ';'
TYPE_DECLARATIONopt TYPE_DECLARATION
TYPE_DECLARATIONopt EPSILON
TYPE_DECLARATION CLASS_DECLARATION
TYPE_DECLARATION INTERFACE_DECLARATION
TYPE_DECLARATION ';'
INTERFACE_DECLARATION INTERFACE_MODIFIERS 'interface' 'VARIABLE_ID' EXTENDS_INTERFACESopt '{' INTERFACE_BODYopt '}'
INTERFACE_MODIFIERS INTERFACE_MODIFIER INTERFACE_MODIFIERS
INTERFACE_MODIFIERS INTERFACE_MODIFIER
INTERFACE_MODIFIER 'abstract'
INTERFACE_MODIFIER 'public'
EXTENDS_INTERFACESopt EXTENDS_INTERFACES
EXTENDS_INTERFACESopt EPSILON
EXTENDS_INTERFACES 'extends' EXTENDS_INTERFACE
EXTENDS_INTERFACE EXTENDS_INTERFACE ',' INTERFACE_TYPE
EXTENDS_INTERFACE INTERFACE_TYPE
INTERFACE_BODYopt INTERFACE_BODY
INTERFACE_BODYopt EPSILON
INTERFACE_BODY INTERFACE_BODY ABSTRACT_METHOD_DECLARATION
INTERFACE_BODY INTERFACE_BODY ';'
ABSTRACT_METHOD_DECLARATION ABSTRACT_METHOD_MODIFIERSopt RETURN_TYPE METHOD_DECLARATOR ';'
ABSTRACT_METHOD_MODIFIERSopt ABSTRACT_METHOD_MODIFIERS
ABSTRACT_METHOD_MODIFIERSopt EPSILON
ABSTRACT_METHOD_MODIFIERS ABSTRACT_METHOD_MODIFIER ABSTRACT_METHOD_MODIFIERS
ABSTRACT_METHOD_MODIFIERS ABSTRACT_METHOD_MODIFIER
ABSTRACT_METHOD_MODIFIER 'abstract'
ABSTRACT_METHOD_MODIFIER 'public'
CLASS_DECLARATION CLASS_MODIFIERS 'class' 'VARIABLE_ID' SUPERopt INTERFACESopt '{' CLASS_BODY '}'
CLASS_MODIFIERS CLASS_MODIFIER CLASS_MODIFIERS
CLASS_MODIFIERS CLASS_MODIFIER
CLASS_MODIFIER 'static'
CLASS_MODIFIER 'abstract'
CLASS_MODIFIER 'public'
CLASS_MODIFIER 'final'
SUPERopt SUPER
SUPERopt EPSILON
SUPER 'extends' CLASS_TYPE
INTERFACESopt INTERFACES
INTERFACESopt EPSILON
INTERFACES 'implements' INTERFACE_TYPE_LIST
INTERFACE_TYPE_LIST INTERFACE_TYPE
INTERFACE_TYPE_LIST INTERFACE_TYPE_LIST ',' INTERFACE_TYPE
CLASS_BODY CLASS_BODY METHOD_DECLARATION
CLASS_BODY CLASS_BODY PROPERTY_DECLARATION
CLASS_BODY CLASS_BODY ';'
CLASS_BODY EPSILON
PROPERTY PROPERTY_MODIFIERS TYPE 'VARIABLE_ID' INSTANTIATION ';'
PROPERTY_MODIFIERS PROPERTY_MODIFIER
PROPERTY_MODIFIERS PROPERTY_MODIFIER PROPERTY_MODIFIERS
PROPERTY_MODIFIER 'static'
PROPERTY_MODIFIER 'public'
PROPERTY_MODIFIER 'protected'
INSTANTIATION '=' EXPRESSION
INSTANTIATION EPSILON
METHOD METHOD_MODIFIERS RETURN_TYPE METHOD_DECLARATOR METHOD_IMPLEMENTATION
METHOD_MODIFIERS METHOD_MODIFIER METHOD_MODIFIERS
METHOD_MODIFIERS METHOD_MODIFIER
METHOD_MODIFIER 'static'
METHOD_MODIFIER 'abstract'
METHOD_MODIFIER 'public'
METHOD_MODIFIER 'final'
METHOD_MODIFIER 'protected'
METHOD_MODIFIER 'native'
METHOD_DECLARATOR 'VARIABLE_ID' '(' METHOD_PARAMSopt ')'
METHOD_PARAMSopt METHOD_PARAMS
METHOD_PARAMSopt EPSILON
METHOD_PARAMS METHOD_PARAM
METHOD_PARAMS METHOD_PARAMS ',' METHOD_PARAM
METHOD_PARAM TYPE 'VARIABLE_ID'
METHOD_IMPLEMENTATION BLOCK
METHOD_IMPLEMENTATION ';'
BLOCK '{' BLOCK_STATEMENTSopt '}'
BLOCK_STATEMENTSopt BLOCK_STATEMENTS
BLOCK_STATEMENTSopt EPSILON
BLOCK_STATEMENTS BLOCK_STATEMENT
BLOCK_STATEMENTS BLOCK_STATEMENTS BLOCK_STATEMENT
BLOCK_STATEMENT TYPE 'VARIABLE_ID' INSTANTIATION
BLOCK_STATEMENT STATEMENT
STATEMENT STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT
STATEMENT IF_STATEMENT
STATEMENT IF_ELSE_STATEMENT
STATEMENT WHILE_STATEMENT
STATEMENT FOR_STATEMENT
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT BLOCK
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT ';'
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT EXPRESSION_STATEMENT
STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT RETURN_STATEMENT
STATEMENT_NO_SHORT_IF STATEMENT_WITHOUT_TRAILING_SUBSTATEMENT
STATEMENT_NO_SHORT_IF IF_ELSE_STATEMENT_NO_SHORT_IF
STATEMENT_NO_SHORT_IF WHILE_STATEMENT_NO_SHORT_IF
STATEMENT_NO_SHORT_IF FOR_STATEMENT_NO_SHORT_IF
EXPRESSION_STATEMENT ASSIGNMENT ';'
EXPRESSION_STATEMENT METHOD_INVOCATION ';'
EXPRESSION_STATEMENT CLASS_INSTANCE_CREATION_EXPRESSION ';'
IF_STATEMENT 'if' '(' EXPRESSION ')' STATEMENT
IF_ELSE_STATEMENT 'if' '(' EXPRESSION ')' STATEMENT_NO_SHORT_IF 'else' STATEMENT
IF_ELSE_STATEMENT_NO_SHORT_IF 'if' '(' EXPRESSION ')' STATEMENT_NO_SHORT_IF 'else' STATEMENT_NO_SHORT_IF
WHILE_STATEMENT 'while' '(' EXPRESSION ')' STATEMENT
WHILE_STATEMENT_NO_SHORT_IF 'while' '(' EXPRESSION ')' STATEMENT_NO_SHORT_IF
FOR_STATEMENT 'for' '(' FOR_INITopt ';' EXPRESSIONopt ';' FOR_UPDATEopt ')' STATEMENT
FOR_STATEMENT_NO_SHORT_IF 'for' '(' FOR_INITopt ';' EXPRESSIONopt ';' FOR_UPDATEopt ')' STATEMENT_NO_SHORT_IF
FOR_INITopt FOR_INIT
FOR_INITLOCAL_VARIABLE_DECLARATION
FOR_INITEXPRESSION_STATEMENT
FOR_INITopt EPSILON
FOR_UPDATEopt EXPRESSION_STATEMENT
RETURN_STATEMENT 'return' EXPRESSIONopt
EXPRESSIONopt EXPRESSION
EXPRESSIONopt EPSILON
EXPRESSION CONDITIONAL_OR_EXPRESSION
EXPRESSION ASSIGNMENT
ASSIGNMENT LEFT_HAND_SIDE '=' ASSIGNMENT_EXPRESSION
LEFT_HAND_SIDE EXPRESSION_NAME
LEFT_HAND_SIDE FIELD_ACCESS
LEFT_HAND_SIDE ARRAY_ACCESS
CONDITIONAL_OR_EXPRESSION CONDITIONAL_AND_EXPRESSION
CONDITIONAL_OR_EXPRESSION CONDITIONAL_OR_EXPRESSION '||' CONDITIONAL_AND_EXPRESSION
CONDITIONAL_AND_EXPRESSION INCLUSIVE_OR_EXPRESSION
CONDITIONAL_AND_EXPRESSION CONDITIONAL_AND_EXPRESSION '&&' INCLUSIVE_OR_EXPRESSION
INCLUSIVE_OR_EXPRESSION EXCLUSIVE_OR_EXPRESSION
INCLUSIVE_OR_EXPRESSION INCLUSIVE_OR_EXPRESSION '|' AND_EXPRESSION
AND_EXPRESSION EQUALITY_EXPRESSION
AND_EXPRESSION AND_EXPRESSION '&' EQUALITY_EXPRESSION
EQUALITY_EXPRESSION RELATIONAL_EXPRESSION
EQUALITY_EXPRESSION EQUALITY_EXPRESSION '==' RELATIONAL_EXPRESSION
EQUALITY_EXPRESSION EQUALITY_EXPRESSION '!=' RELATIONAL_EXPRESSION
RELATIONAL_EXPRESSION ADDITIVE_EXPRESSION
RELATIONAL_EXPRESSION RELATIONAL_EXPRESSION '<' ADDITIVE_EXPRESSION
RELATIONAL_EXPRESSION RELATIONAL_EXPRESSION '>' ADDITIVE_EXPRESSION
RELATIONAL_EXPRESSION RELATIONAL_EXPRESSION '<=' ADDITIVE_EXPRESSION
RELATIONAL_EXPRESSION RELATIONAL_EXPRESSION '>=' ADDITIVE_EXPRESSION
RELATIONAL_EXPRESSION RELATIONAL_EXPRESSION 'instanceof' ADDITIVE_EXPRESSION
ADDITIVE_EXPRESSION MULTIPLICATIVE_EXPRESSION
ADDITIVE_EXPRESSION ADDITIVE_EXPRESSION '+' MULTIPLICATIVE_EXPRESSION
ADDITIVE_EXPRESSION ADDITIVE_EXPRESSION '-' MULTIPLICATIVE_EXPRESSION
MULTIPLICATIVE_EXPRESSION UNARY_EXPRESSION
MULTIPLICATIVE_EXPRESSION MULTIPLICATIVE_EXPRESSION '*' UNARY_EXPRESSION
MULTIPLICATIVE_EXPRESSION MULTIPLICATIVE_EXPRESSION '/' UNARY_EXPRESSION
MULTIPLICATIVE_EXPRESSION MULTIPLICATIVE_EXPRESSION '%' UNARY_EXPRESSION
UNARY_EXPRESSION '-' UNARY_EXPRESSION
UNARY_EXPRESSION UNARY_EXPRESSION_NOT_PLUS_MINUS
UNARY_EXPRESSION_NOT_PLUS_MINUS POST_FIX_EXPRESSION
UNARY_EXPRESSION_NOT_PLUS_MINUS '~' UNARY_EXPRESSION
UNARY_EXPRESSION_NOT_PLUS_MINUS '!' UNARY_EXPRESSION
UNARY_EXPRESSION_NOT_PLUS_MINUS CAST_EXPRESSION UNARY_EXPRESSION
CAST_EXPRESSION '(' PRIM_TYPE ')' UNARY_EXPRESSION
CAST_EXPRESSION '(' REFERENCE_TYPE ')' UNARY_EXPRESSION_NOT_PLUS_MINUS
POST_FIX_EXPRESSION PRIMARY_EXPRESSION
POST_FIX_EXPRESSION EXPRESSION_NAME
PRIMARY_EXPRESSION PRIMARY_EXPRESSION_NO_NEW_ARRAY
PRIMARY_EXPRESSION ARRAY_CREATION_EXPRESSION
PRIMARY_EXPRESSION_NO_NEW_ARRAY LITERAL
PRIMARY_EXPRESSION_NO_NEW_ARRAY 'this'
PRIMARY_EXPRESSION_NO_NEW_ARRAY CLASS_NAME '.' 'this'
PRIMARY_EXPRESSION_NO_NEW_ARRAY '(' EXPRESSION ')'
PRIMARY_EXPRESSION_NO_NEW_ARRAY CLASS_INSTANCE_CREATION_EXPRESSION
PRIMARY_EXPRESSION_NO_NEW_ARRAY FIELD_ACCESS
PRIMARY_EXPRESSION_NO_NEW_ARRAY METHOD_INVOCATION
PRIMARY_EXPRESSION_NO_NEW_ARRAY ARRAY_ACCESS
CLASS_INSTANCE_CREATION_EXPRESSION 'new' CLASS_OR_INTERFACE_TYPE '(' ARGUMENT_LISTopt ')'
CLASS_INSTANCE_CREATION_EXPRESSION PRIMARY_EXPRESSION '.' 'new' 'VARIABLE_ID' '(' ARGUMENT_LISTopt ')'
ARGUMENT_LISTopt ARGUMENT_LIST
ARGUMENT_LISTopt EPSILON
ARGUMENT_LIST EXPRESSION
ARGUMENT_LIST ARGUMENT_LIST ',' EXPRESSION
ARRAY_CREATION_EXPRESSION 'new' NON_ARRAY_TYPE '[' EXPRESSIONopt ']'
FIELD_ACCESS PRIMARY_EXPRESSION '.' 'VARIABLE_ID'
FIELD_ACCESS 'super' '.' 'VARIABLE_ID'
FIELD_ACCESS CLASS_NAME '.' 'super' '.' 'VARIABLE_ID'
METHOD_INVOCATION METHOD_NAME '(' ARGUMENT_LISTopt ')'
METHOD_INVOCATION PRIMARY_EXPRESSION '.' '(' ARGUMENT_LISTopt ')'
METHOD_INVOCATION 'super' '.' 'VARIABLE_ID' '(' ARGUMENT_LISTopt ')'
METHOD_INVOCATION CLASS_NAME '.' 'super' '.' 'VARIABLE_ID' '(' ARGUMENT_LISTopt ')'
ARRAY_ACCESS EXPRESSION_NAME '[' EXPRESSION ']'
ARRAY_ACCESS PRIMARY_EXPRESSION_NO_NEW_ARRAY '[' EXPRESSION ']'