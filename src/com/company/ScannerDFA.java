package com.company;

@SuppressWarnings("SpellCheckingInspection")
public class ScannerDFA {

    static {
        State startState = new State("Start", false, null);
        State A = new State ("a", true, Kind.VARIABLE);
        State AB = new State ("ab", true, Kind.VARIABLE);
        State ABS = new State ("abs", true, Kind.VARIABLE);
        State ABST = new State ("abst", true, Kind.VARIABLE);
        State ABSTR = new State ("abstr", true, Kind.VARIABLE);
        State ABSTRA = new State ("abstra", true, Kind.VARIABLE);
        State ABSTRAC = new State ("abstrac", true, Kind.VARIABLE);
        State ABSTRACT = new State ("abstract", true, Kind.ABSTRACT);
        State AS = new State ("as", true, Kind.VARIABLE);
        State ASS = new State ("ass", true, Kind.VARIABLE);
        State ASSE = new State ("asse", true, Kind.VARIABLE);
        State ASSER = new State ("asser", true, Kind.VARIABLE);
        State ASSERT = new State ("assert", true, Kind.ASSERT);
        State B = new State ("b", true, Kind.VARIABLE);
        State BO = new State ("bo", true, Kind.VARIABLE);
        State BOO = new State ("boo", true, Kind.VARIABLE);
        State BOOL = new State ("bool", true, Kind.VARIABLE);
        State BOOLE = new State ("boole", true, Kind.VARIABLE);
        State BOOLEA = new State ("boolea", true, Kind.VARIABLE);
        State BOOLEAN = new State ("boolean", true, Kind.BOOLEAN);
        State BR = new State ("br", true, Kind.VARIABLE);
        State BRE = new State ("bre", true, Kind.VARIABLE);
        State BREA = new State ("brea", true, Kind.VARIABLE);
        State BREAK = new State ("break", true, Kind.BREAK);
        State BY = new State ("by", true, Kind.VARIABLE);
        State BYT = new State ("byt", true, Kind.VARIABLE);
        State BYTE = new State ("byte", true, Kind.BYTE);
        State C = new State ("c", true, Kind.VARIABLE);
        State CA = new State ("ca", true, Kind.VARIABLE);
        State CAS = new State ("cas", true, Kind.VARIABLE);
        State CASE = new State ("case", true, Kind.CASE);
        State CAT = new State ("cat", true, Kind.VARIABLE);
        State CATC = new State ("catc", true, Kind.VARIABLE);
        State CATCH = new State ("catch", true, Kind.CATCH);
        State CH = new State ("ch", true, Kind.VARIABLE);
        State CHA = new State ("cha", true, Kind.VARIABLE);
        State CHAR = new State ("char", true, Kind.CHAR);
        State CL = new State ("cl", true, Kind.VARIABLE);
        State CLA = new State ("cla", true, Kind.VARIABLE);
        State CLAS = new State ("clas", true, Kind.VARIABLE);
        State CLASS = new State ("class", true, Kind.CLASS);
        State CO = new State ("co", true, Kind.VARIABLE);
        State CON = new State ("con", true, Kind.VARIABLE);
        State CONT = new State ("cont", true, Kind.VARIABLE);
        State CONTI = new State ("conti", true, Kind.VARIABLE);
        State CONTIN = new State ("contin", true, Kind.VARIABLE);
        State CONTINU = new State ("continu", true, Kind.VARIABLE);
        State CONTINUE = new State ("continue", true, Kind.CONTINUE);
        State CONS = new State ("cons", true, Kind.VARIABLE);
        State CONST = new State ("const", true, Kind.CONST);
        State D = new State ("d", true, Kind.VARIABLE);
        State DE = new State ("de", true, Kind.VARIABLE);
        State DEF = new State ("def", true, Kind.VARIABLE);
        State DEFA = new State ("defa", true, Kind.VARIABLE);
        State DEFAU = new State ("defau", true, Kind.VARIABLE);
        State DEFAUL = new State ("defaul", true, Kind.VARIABLE);
        State DEFAULT = new State ("default", true, Kind.DEFAULT);
        State DO = new State ("do", true, Kind.DO);
        State DOU = new State ("dou", true, Kind.VARIABLE);
        State DOUB = new State ("doub", true, Kind.VARIABLE);
        State DOUBL = new State ("doubl", true, Kind.VARIABLE);
        State DOUBLE = new State ("double", true, Kind.DOUBLE);
        State E = new State ("e", true, Kind.VARIABLE);
        State EL = new State ("el", true, Kind.VARIABLE);
        State ELS = new State ("els", true, Kind.VARIABLE);
        State ELSE = new State ("else", true, Kind.ELSE);
        State EN = new State ("en", true, Kind.VARIABLE);
        State ENU = new State ("enu", true, Kind.VARIABLE);
        State ENUM = new State ("enum", true, Kind.ENUM);
        State EX = new State ("ex", true, Kind.VARIABLE);
        State EXP = new State ("exp", true, Kind.VARIABLE);
        State EXPO = new State ("expo", true, Kind.VARIABLE);
        State EXPOR = new State ("expor", true, Kind.VARIABLE);
        State EXPORT = new State ("export", true, Kind.VARIABLE);
        State EXPORTS = new State ("exports", true, Kind.EXPORTS);
        State EXT = new State ("ext", true, Kind.VARIABLE);
        State EXTE = new State ("exte", true, Kind.VARIABLE);
        State EXTEN = new State ("exten", true, Kind.VARIABLE);
        State EXTEND = new State ("extend", true, Kind.VARIABLE);
        State EXTENDS = new State ("extends", true, Kind.EXTENDS);
        State F = new State ("f", true, Kind.VARIABLE);
        State FI = new State ("fi", true, Kind.VARIABLE);
        State FIN = new State ("fin", true, Kind.VARIABLE);
        State FINA = new State ("fina", true, Kind.VARIABLE);
        State FINAL = new State ("final", true, Kind.FINAL);
        State FINALL = new State ("finall", true, Kind.VARIABLE);
        State FINALLY = new State ("finally", true, Kind.FINALLY);
        State FL = new State ("fl", true, Kind.VARIABLE);
        State FLO = new State ("flo", true, Kind.VARIABLE);
        State FLOA = new State ("floa", true, Kind.VARIABLE);
        State FLOAT = new State ("float", true, Kind.FLOAT);
        State FO = new State ("fo", true, Kind.VARIABLE);
        State FOR = new State ("for", true, Kind.FOR);
        State G = new State ("g", true, Kind.VARIABLE);
        State GO = new State ("go", true, Kind.VARIABLE);
        State GOT = new State ("got", true, Kind.VARIABLE);
        State GOTO = new State ("goto", true, Kind.GOTO);
        State I = new State ("i", true, Kind.VARIABLE);
        State IF = new State ("if", true, Kind.IF);
        State IM = new State ("im", true, Kind.VARIABLE);
        State IMP = new State ("imp", true, Kind.VARIABLE);
        State IMPL = new State ("impl", true, Kind.VARIABLE);
        State IMPLE = new State ("imple", true, Kind.VARIABLE);
        State IMPLEM = new State ("implem", true, Kind.VARIABLE);
        State IMPLEME = new State ("impleme", true, Kind.VARIABLE);
        State IMPLEMEN = new State ("implemen", true, Kind.VARIABLE);
        State IMPLEMENT = new State ("implement", true, Kind.VARIABLE);
        State IMPLEMENTS = new State ("implements", true, Kind.IMPLEMENTS);
        State IMPO = new State ("impo", true, Kind.VARIABLE);
        State IMPOR = new State ("impor", true, Kind.VARIABLE);
        State IMPORT = new State ("import", true, Kind.IMPORT);
        State IN = new State ("in", true, Kind.VARIABLE);
        State INS = new State ("ins", true, Kind.VARIABLE);
        State INST = new State ("inst", true, Kind.VARIABLE);
        State INSTA = new State ("insta", true, Kind.VARIABLE);
        State INSTAN = new State ("instan", true, Kind.VARIABLE);
        State INSTANC = new State ("instanc", true, Kind.VARIABLE);
        State INSTANCE = new State ("instance", true, Kind.VARIABLE);
        State INSTANCEO = new State ("instanceo", true, Kind.VARIABLE);
        State INSTANCEOF = new State ("instanceof", true, Kind.INSTANCEOF);
        State INT = new State ("int", true, Kind.INT);
        State INTE = new State ("inte", true, Kind.VARIABLE);
        State INTER = new State ("inter", true, Kind.VARIABLE);
        State INTERF = new State ("interf", true, Kind.VARIABLE);
        State INTERFA = new State ("interfa", true, Kind.VARIABLE);
        State INTERFAC = new State ("interfac", true, Kind.VARIABLE);
        State INTERFACE = new State ("interface", true, Kind.INTERFACE);
        State L = new State ("l", true, Kind.VARIABLE);
        State LO = new State ("lo", true, Kind.VARIABLE);
        State LON = new State ("lon", true, Kind.VARIABLE);
        State LONG = new State ("long", true, Kind.LONG);
        State M = new State ("m", true, Kind.VARIABLE);
        State MO = new State ("mo", true, Kind.VARIABLE);
        State MOD = new State ("mod", true, Kind.VARIABLE);
        State MODU = new State ("modu", true, Kind.VARIABLE);
        State MODUL = new State ("modul", true, Kind.VARIABLE);
        State MODULE = new State ("module", true, Kind.MODULE);
        State N = new State ("n", true, Kind.VARIABLE);
        State NA = new State ("na", true, Kind.VARIABLE);
        State NAT = new State ("nat", true, Kind.VARIABLE);
        State NATI = new State ("nati", true, Kind.VARIABLE);
        State NATIV = new State ("nativ", true, Kind.VARIABLE);
        State NATIVE = new State ("native", true, Kind.NATIVE);
        State NE = new State ("ne", true, Kind.VARIABLE);
        State NEW = new State ("new", true, Kind.NEW);
        State P = new State ("p", true, Kind.VARIABLE);
        State PA = new State ("pa", true, Kind.VARIABLE);
        State PAC = new State ("pac", true, Kind.VARIABLE);
        State PACK = new State ("pack", true, Kind.VARIABLE);
        State PACKA = new State ("packa", true, Kind.VARIABLE);
        State PACKAG = new State ("packag", true, Kind.VARIABLE);
        State PACKAGE = new State ("package", true, Kind.PACKAGE);
        State PR = new State ("pr", true, Kind.VARIABLE);
        State PRI = new State ("pri", true, Kind.VARIABLE);
        State PRIV = new State ("priv", true, Kind.VARIABLE);
        State PRIVA = new State ("priva", true, Kind.VARIABLE);
        State PRIVAT = new State ("privat", true, Kind.VARIABLE);
        State PRIVATE = new State ("private", true, Kind.PRIVATE);
        State PRO = new State ("pro", true, Kind.VARIABLE);
        State PROT = new State ("prot", true, Kind.VARIABLE);
        State PROTE = new State ("prote", true, Kind.VARIABLE);
        State PROTEC = new State ("protec", true, Kind.VARIABLE);
        State PROTECT = new State ("protect", true, Kind.VARIABLE);
        State PROTECTE = new State ("protecte", true, Kind.VARIABLE);
        State PROTECTED = new State ("protected", true, Kind.PROTECTED);
        State PU = new State ("pu", true, Kind.VARIABLE);
        State PUB = new State ("pub", true, Kind.VARIABLE);
        State PUBL = new State ("publ", true, Kind.VARIABLE);
        State PUBLI = new State ("publi", true, Kind.VARIABLE);
        State PUBLIC = new State ("public", true, Kind.PUBLIC);
        State R = new State ("r", true, Kind.VARIABLE);
        State RE = new State ("re", true, Kind.VARIABLE);
        State REQ = new State ("req", true, Kind.VARIABLE);
        State REQU = new State ("requ", true, Kind.VARIABLE);
        State REQUI = new State ("requi", true, Kind.VARIABLE);
        State REQUIR = new State ("requir", true, Kind.VARIABLE);
        State REQUIRE = new State ("require", true, Kind.VARIABLE);
        State REQUIRES = new State ("requires", true, Kind.REQUIRES);
        State RET = new State ("ret", true, Kind.VARIABLE);
        State RETU = new State ("retu", true, Kind.VARIABLE);
        State RETUR = new State ("retur", true, Kind.VARIABLE);
        State RETURN = new State ("return", true, Kind.RETURN);
        State S = new State ("s", true, Kind.VARIABLE);
        State SH = new State ("sh", true, Kind.VARIABLE);
        State SHO = new State ("sho", true, Kind.VARIABLE);
        State SHOR = new State ("shor", true, Kind.VARIABLE);
        State SHORT = new State ("short", true, Kind.SHORT);
        State ST = new State ("st", true, Kind.VARIABLE);
        State STA = new State ("sta", true, Kind.VARIABLE);
        State STAT = new State ("stat", true, Kind.VARIABLE);
        State STATI = new State ("stati", true, Kind.VARIABLE);
        State STATIC = new State ("static", true, Kind.STATIC);
        State STR = new State ("str", true, Kind.VARIABLE);
        State STRI = new State ("stri", true, Kind.VARIABLE);
        State STRIC = new State ("stric", true, Kind.VARIABLE);
        State STRICT = new State ("strict", true, Kind.VARIABLE);
        State STRICTF = new State ("strictf", true, Kind.VARIABLE);
        State STRICTFP = new State ("strictfp", true, Kind.STRICTFP);
        State SU = new State ("su", true, Kind.VARIABLE);
        State SUP = new State ("sup", true, Kind.VARIABLE);
        State SUPE = new State ("supe", true, Kind.VARIABLE);
        State SUPER = new State ("super", true, Kind.SUPER);
        State SW = new State ("sw", true, Kind.VARIABLE);
        State SWI = new State ("swi", true, Kind.VARIABLE);
        State SWIT = new State ("swit", true, Kind.VARIABLE);
        State SWITC = new State ("switc", true, Kind.VARIABLE);
        State SWITCH = new State ("switch", true, Kind.SWITCH);
        State SY = new State ("sy", true, Kind.VARIABLE);
        State SYN = new State ("syn", true, Kind.VARIABLE);
        State SYNC = new State ("sync", true, Kind.VARIABLE);
        State SYNCH = new State ("synch", true, Kind.VARIABLE);
        State SYNCHR = new State ("synchr", true, Kind.VARIABLE);
        State SYNCHRO = new State ("synchro", true, Kind.VARIABLE);
        State SYNCHRON = new State ("synchron", true, Kind.VARIABLE);
        State SYNCHRONI = new State ("synchroni", true, Kind.VARIABLE);
        State SYNCHRONIZ = new State ("synchroniz", true, Kind.VARIABLE);
        State SYNCHRONIZE = new State ("synchronize", true, Kind.VARIABLE);
        State SYNCHRONIZED = new State ("synchronized", true, Kind.SYNCHRONIZED);
        State T = new State ("t", true, Kind.VARIABLE);
        State TH = new State ("th", true, Kind.VARIABLE);
        State THI = new State ("thi", true, Kind.VARIABLE);
        State THIS = new State ("this", true, Kind.THIS);
        State THR = new State ("thr", true, Kind.VARIABLE);
        State THRO = new State ("thro", true, Kind.VARIABLE);
        State THROW = new State ("throw", true, Kind.THROW);
        State THROWS = new State ("throws", true, Kind.THROWS);
        State TR = new State ("tr", true, Kind.VARIABLE);
        State TRA = new State ("tra", true, Kind.VARIABLE);
        State TRAN = new State ("tran", true, Kind.VARIABLE);
        State TRANS = new State ("trans", true, Kind.VARIABLE);
        State TRANSI = new State ("transi", true, Kind.VARIABLE);
        State TRANSIE = new State ("transie", true, Kind.VARIABLE);
        State TRANSIEN = new State ("transien", true, Kind.VARIABLE);
        State TRANSIENT = new State ("transient", true, Kind.TRANSIENT);
        State TRY = new State ("try", true, Kind.TRY);
        State V = new State ("v", true, Kind.VARIABLE);
        State VA = new State ("va", true, Kind.VARIABLE);
        State VAR = new State ("var", true, Kind.VAR);
        State VO = new State ("vo", true, Kind.VARIABLE);
        State VOI = new State ("voi", true, Kind.VARIABLE);
        State VOID = new State ("void", true, Kind.VOID);
        State VOL = new State ("vol", true, Kind.VARIABLE);
        State VOLA = new State ("vola", true, Kind.VARIABLE);
        State VOLAT = new State ("volat", true, Kind.VARIABLE);
        State VOLATI = new State ("volati", true, Kind.VARIABLE);
        State VOLATIL = new State ("volatil", true, Kind.VARIABLE);
        State VOLATILE = new State ("volatile", true, Kind.VOLATILE);
        State W = new State ("w", true, Kind.VARIABLE);
        State WH = new State ("wh", true, Kind.VARIABLE);
        State WHI = new State ("whi", true, Kind.VARIABLE);
        State WHIL = new State ("whil", true, Kind.VARIABLE);
        State WHILE = new State ("while", true, Kind.WHILE);
        State VARSTATE = new State ("varstate", true, Kind.VARIABLE);

        A.transitions.add(new StateTrans("b", AB));
        AB.transitions.add(new StateTrans("s", ABS));
        ABS.transitions.add(new StateTrans("t", ABST));
        ABST.transitions.add(new StateTrans("r", ABSTR));
        ABSTR.transitions.add(new StateTrans("a", ABSTRA));
        ABSTRA.transitions.add(new StateTrans("c", ABSTRAC));
        ABSTRAC.transitions.add(new StateTrans("t", ABSTRACT));
        ABSTRACT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        A.transitions.add(new StateTrans("s", AS));
        AS.transitions.add(new StateTrans("s", ASS));
        ASS.transitions.add(new StateTrans("e", ASSE));
        ASSE.transitions.add(new StateTrans("r", ASSER));
        ASSER.transitions.add(new StateTrans("t", ASSERT));
        ASSERT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        B.transitions.add(new StateTrans("o", BO));
        BO.transitions.add(new StateTrans("o", BOO));
        BOO.transitions.add(new StateTrans("l", BOOL));
        BOOL.transitions.add(new StateTrans("e", BOOLE));
        BOOLE.transitions.add(new StateTrans("a", BOOLEA));
        BOOLEA.transitions.add(new StateTrans("n", BOOLEAN));
        BOOLEAN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        B.transitions.add(new StateTrans("r", BR));
        BR.transitions.add(new StateTrans("e", BRE));
        BRE.transitions.add(new StateTrans("a", BREA));
        BREA.transitions.add(new StateTrans("k", BREAK));
        BREAK.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        B.transitions.add(new StateTrans("y", BY));
        BY.transitions.add(new StateTrans("t", BYT));
        BYT.transitions.add(new StateTrans("e", BYTE));
        BYTE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("a", CA));
        CA.transitions.add(new StateTrans("s", CAS));
        CAS.transitions.add(new StateTrans("e", CASE));
        CASE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("a", CA));
        CA.transitions.add(new StateTrans("t", CAT));
        CAT.transitions.add(new StateTrans("c", CATC));
        CATC.transitions.add(new StateTrans("h", CATCH));
        CATCH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("h", CH));
        CH.transitions.add(new StateTrans("a", CHA));
        CHA.transitions.add(new StateTrans("r", CHAR));
        CHAR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("l", CL));
        CL.transitions.add(new StateTrans("a", CLA));
        CLA.transitions.add(new StateTrans("s", CLAS));
        CLAS.transitions.add(new StateTrans("s", CLASS));
        CLASS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("o", CO));
        CO.transitions.add(new StateTrans("n", CON));
        CON.transitions.add(new StateTrans("t", CONT));
        CONT.transitions.add(new StateTrans("i", CONTI));
        CONTI.transitions.add(new StateTrans("n", CONTIN));
        CONTIN.transitions.add(new StateTrans("u", CONTINU));
        CONTINU.transitions.add(new StateTrans("e", CONTINUE));
        CONTINUE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("o", CO));
        CO.transitions.add(new StateTrans("n", CON));
        CON.transitions.add(new StateTrans("s", CONS));
        CONS.transitions.add(new StateTrans("t", CONST));
        CONST.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        D.transitions.add(new StateTrans("e", DE));
        DE.transitions.add(new StateTrans("f", DEF));
        DEF.transitions.add(new StateTrans("a", DEFA));
        DEFA.transitions.add(new StateTrans("u", DEFAU));
        DEFAU.transitions.add(new StateTrans("l", DEFAUL));
        DEFAUL.transitions.add(new StateTrans("t", DEFAULT));
        DEFAULT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        D.transitions.add(new StateTrans("o", DO));
        DO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        D.transitions.add(new StateTrans("o", DO));
        DO.transitions.add(new StateTrans("u", DOU));
        DOU.transitions.add(new StateTrans("b", DOUB));
        DOUB.transitions.add(new StateTrans("l", DOUBL));
        DOUBL.transitions.add(new StateTrans("e", DOUBLE));
        DOUBLE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("l", EL));
        EL.transitions.add(new StateTrans("s", ELS));
        ELS.transitions.add(new StateTrans("e", ELSE));
        ELSE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("n", EN));
        EN.transitions.add(new StateTrans("u", ENU));
        ENU.transitions.add(new StateTrans("m", ENUM));
        ENUM.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("x", EX));
        EX.transitions.add(new StateTrans("p", EXP));
        EXP.transitions.add(new StateTrans("o", EXPO));
        EXPO.transitions.add(new StateTrans("r", EXPOR));
        EXPOR.transitions.add(new StateTrans("t", EXPORT));
        EXPORT.transitions.add(new StateTrans("s", EXPORTS));
        EXPORTS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("x", EX));
        EX.transitions.add(new StateTrans("t", EXT));
        EXT.transitions.add(new StateTrans("e", EXTE));
        EXTE.transitions.add(new StateTrans("n", EXTEN));
        EXTEN.transitions.add(new StateTrans("d", EXTEND));
        EXTEND.transitions.add(new StateTrans("s", EXTENDS));
        EXTENDS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("i", FI));
        FI.transitions.add(new StateTrans("n", FIN));
        FIN.transitions.add(new StateTrans("a", FINA));
        FINA.transitions.add(new StateTrans("l", FINAL));
        FINAL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("i", FI));
        FI.transitions.add(new StateTrans("n", FIN));
        FIN.transitions.add(new StateTrans("a", FINA));
        FINA.transitions.add(new StateTrans("l", FINAL));
        FINAL.transitions.add(new StateTrans("l", FINALL));
        FINALL.transitions.add(new StateTrans("y", FINALLY));
        FINALLY.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("l", FL));
        FL.transitions.add(new StateTrans("o", FLO));
        FLO.transitions.add(new StateTrans("a", FLOA));
        FLOA.transitions.add(new StateTrans("t", FLOAT));
        FLOAT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("o", FO));
        FO.transitions.add(new StateTrans("r", FOR));
        FOR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        G.transitions.add(new StateTrans("o", GO));
        GO.transitions.add(new StateTrans("t", GOT));
        GOT.transitions.add(new StateTrans("o", GOTO));
        GOTO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("f", IF));
        IF.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("m", IM));
        IM.transitions.add(new StateTrans("p", IMP));
        IMP.transitions.add(new StateTrans("l", IMPL));
        IMPL.transitions.add(new StateTrans("e", IMPLE));
        IMPLE.transitions.add(new StateTrans("m", IMPLEM));
        IMPLEM.transitions.add(new StateTrans("e", IMPLEME));
        IMPLEME.transitions.add(new StateTrans("n", IMPLEMEN));
        IMPLEMEN.transitions.add(new StateTrans("t", IMPLEMENT));
        IMPLEMENT.transitions.add(new StateTrans("s", IMPLEMENTS));
        IMPLEMENTS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("m", IM));
        IM.transitions.add(new StateTrans("p", IMP));
        IMP.transitions.add(new StateTrans("o", IMPO));
        IMPO.transitions.add(new StateTrans("r", IMPOR));
        IMPOR.transitions.add(new StateTrans("t", IMPORT));
        IMPORT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("n", IN));
        IN.transitions.add(new StateTrans("s", INS));
        INS.transitions.add(new StateTrans("t", INST));
        INST.transitions.add(new StateTrans("a", INSTA));
        INSTA.transitions.add(new StateTrans("n", INSTAN));
        INSTAN.transitions.add(new StateTrans("c", INSTANC));
        INSTANC.transitions.add(new StateTrans("e", INSTANCE));
        INSTANCE.transitions.add(new StateTrans("o", INSTANCEO));
        INSTANCEO.transitions.add(new StateTrans("f", INSTANCEOF));
        INSTANCEOF.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("n", IN));
        IN.transitions.add(new StateTrans("t", INT));
        INT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("n", IN));
        IN.transitions.add(new StateTrans("t", INT));
        INT.transitions.add(new StateTrans("e", INTE));
        INTE.transitions.add(new StateTrans("r", INTER));
        INTER.transitions.add(new StateTrans("f", INTERF));
        INTERF.transitions.add(new StateTrans("a", INTERFA));
        INTERFA.transitions.add(new StateTrans("c", INTERFAC));
        INTERFAC.transitions.add(new StateTrans("e", INTERFACE));
        INTERFACE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        L.transitions.add(new StateTrans("o", LO));
        LO.transitions.add(new StateTrans("n", LON));
        LON.transitions.add(new StateTrans("g", LONG));
        LONG.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        M.transitions.add(new StateTrans("o", MO));
        MO.transitions.add(new StateTrans("d", MOD));
        MOD.transitions.add(new StateTrans("u", MODU));
        MODU.transitions.add(new StateTrans("l", MODUL));
        MODUL.transitions.add(new StateTrans("e", MODULE));
        MODULE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        N.transitions.add(new StateTrans("a", NA));
        NA.transitions.add(new StateTrans("t", NAT));
        NAT.transitions.add(new StateTrans("i", NATI));
        NATI.transitions.add(new StateTrans("v", NATIV));
        NATIV.transitions.add(new StateTrans("e", NATIVE));
        NATIVE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        N.transitions.add(new StateTrans("e", NE));
        NE.transitions.add(new StateTrans("w", NEW));
        NEW.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("a", PA));
        PA.transitions.add(new StateTrans("c", PAC));
        PAC.transitions.add(new StateTrans("k", PACK));
        PACK.transitions.add(new StateTrans("a", PACKA));
        PACKA.transitions.add(new StateTrans("g", PACKAG));
        PACKAG.transitions.add(new StateTrans("e", PACKAGE));
        PACKAGE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("r", PR));
        PR.transitions.add(new StateTrans("i", PRI));
        PRI.transitions.add(new StateTrans("v", PRIV));
        PRIV.transitions.add(new StateTrans("a", PRIVA));
        PRIVA.transitions.add(new StateTrans("t", PRIVAT));
        PRIVAT.transitions.add(new StateTrans("e", PRIVATE));
        PRIVATE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("r", PR));
        PR.transitions.add(new StateTrans("o", PRO));
        PRO.transitions.add(new StateTrans("t", PROT));
        PROT.transitions.add(new StateTrans("e", PROTE));
        PROTE.transitions.add(new StateTrans("c", PROTEC));
        PROTEC.transitions.add(new StateTrans("t", PROTECT));
        PROTECT.transitions.add(new StateTrans("e", PROTECTE));
        PROTECTE.transitions.add(new StateTrans("d", PROTECTED));
        PROTECTED.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("u", PU));
        PU.transitions.add(new StateTrans("b", PUB));
        PUB.transitions.add(new StateTrans("l", PUBL));
        PUBL.transitions.add(new StateTrans("i", PUBLI));
        PUBLI.transitions.add(new StateTrans("c", PUBLIC));
        PUBLIC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        R.transitions.add(new StateTrans("e", RE));
        RE.transitions.add(new StateTrans("q", REQ));
        REQ.transitions.add(new StateTrans("u", REQU));
        REQU.transitions.add(new StateTrans("i", REQUI));
        REQUI.transitions.add(new StateTrans("r", REQUIR));
        REQUIR.transitions.add(new StateTrans("e", REQUIRE));
        REQUIRE.transitions.add(new StateTrans("s", REQUIRES));
        REQUIRES.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        R.transitions.add(new StateTrans("e", RE));
        RE.transitions.add(new StateTrans("t", RET));
        RET.transitions.add(new StateTrans("u", RETU));
        RETU.transitions.add(new StateTrans("r", RETUR));
        RETUR.transitions.add(new StateTrans("n", RETURN));
        RETURN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("h", SH));
        SH.transitions.add(new StateTrans("o", SHO));
        SHO.transitions.add(new StateTrans("r", SHOR));
        SHOR.transitions.add(new StateTrans("t", SHORT));
        SHORT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("t", ST));
        ST.transitions.add(new StateTrans("a", STA));
        STA.transitions.add(new StateTrans("t", STAT));
        STAT.transitions.add(new StateTrans("i", STATI));
        STATI.transitions.add(new StateTrans("c", STATIC));
        STATIC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("t", ST));
        ST.transitions.add(new StateTrans("r", STR));
        STR.transitions.add(new StateTrans("i", STRI));
        STRI.transitions.add(new StateTrans("c", STRIC));
        STRIC.transitions.add(new StateTrans("t", STRICT));
        STRICT.transitions.add(new StateTrans("f", STRICTF));
        STRICTF.transitions.add(new StateTrans("p", STRICTFP));
        STRICTFP.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("u", SU));
        SU.transitions.add(new StateTrans("p", SUP));
        SUP.transitions.add(new StateTrans("e", SUPE));
        SUPE.transitions.add(new StateTrans("r", SUPER));
        SUPER.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("w", SW));
        SW.transitions.add(new StateTrans("i", SWI));
        SWI.transitions.add(new StateTrans("t", SWIT));
        SWIT.transitions.add(new StateTrans("c", SWITC));
        SWITC.transitions.add(new StateTrans("h", SWITCH));
        SWITCH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("y", SY));
        SY.transitions.add(new StateTrans("n", SYN));
        SYN.transitions.add(new StateTrans("c", SYNC));
        SYNC.transitions.add(new StateTrans("h", SYNCH));
        SYNCH.transitions.add(new StateTrans("r", SYNCHR));
        SYNCHR.transitions.add(new StateTrans("o", SYNCHRO));
        SYNCHRO.transitions.add(new StateTrans("n", SYNCHRON));
        SYNCHRON.transitions.add(new StateTrans("i", SYNCHRONI));
        SYNCHRONI.transitions.add(new StateTrans("z", SYNCHRONIZ));
        SYNCHRONIZ.transitions.add(new StateTrans("e", SYNCHRONIZE));
        SYNCHRONIZE.transitions.add(new StateTrans("d", SYNCHRONIZED));
        SYNCHRONIZED.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("h", TH));
        TH.transitions.add(new StateTrans("i", THI));
        THI.transitions.add(new StateTrans("s", THIS));
        THIS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("h", TH));
        TH.transitions.add(new StateTrans("r", THR));
        THR.transitions.add(new StateTrans("o", THRO));
        THRO.transitions.add(new StateTrans("w", THROW));
        THROW.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("h", TH));
        TH.transitions.add(new StateTrans("r", THR));
        THR.transitions.add(new StateTrans("o", THRO));
        THRO.transitions.add(new StateTrans("w", THROW));
        THROW.transitions.add(new StateTrans("s", THROWS));
        THROWS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("r", TR));
        TR.transitions.add(new StateTrans("a", TRA));
        TRA.transitions.add(new StateTrans("n", TRAN));
        TRAN.transitions.add(new StateTrans("s", TRANS));
        TRANS.transitions.add(new StateTrans("i", TRANSI));
        TRANSI.transitions.add(new StateTrans("e", TRANSIE));
        TRANSIE.transitions.add(new StateTrans("n", TRANSIEN));
        TRANSIEN.transitions.add(new StateTrans("t", TRANSIENT));
        TRANSIENT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("r", TR));
        TR.transitions.add(new StateTrans("y", TRY));
        TRY.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        V.transitions.add(new StateTrans("a", VA));
        VA.transitions.add(new StateTrans("r", VAR));
        VAR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        V.transitions.add(new StateTrans("o", VO));
        VO.transitions.add(new StateTrans("i", VOI));
        VOI.transitions.add(new StateTrans("d", VOID));
        VOID.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        V.transitions.add(new StateTrans("o", VO));
        VO.transitions.add(new StateTrans("l", VOL));
        VOL.transitions.add(new StateTrans("a", VOLA));
        VOLA.transitions.add(new StateTrans("t", VOLAT));
        VOLAT.transitions.add(new StateTrans("i", VOLATI));
        VOLATI.transitions.add(new StateTrans("l", VOLATIL));
        VOLATIL.transitions.add(new StateTrans("e", VOLATILE));
        VOLATILE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        W.transitions.add(new StateTrans("h", WH));
        WH.transitions.add(new StateTrans("i", WHI));
        WHI.transitions.add(new StateTrans("l", WHIL));
        WHIL.transitions.add(new StateTrans("e", WHILE));
        WHILE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));

                A.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        AB.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ABS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ABST.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ABSTR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ABSTRA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ABSTRAC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        A.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        AS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ASS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ASSE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ASSER.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        B.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BOO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BOOL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BOOLE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BOOLEA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        B.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BRE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BREA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        B.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BY.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        BYT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CAS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CAT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CATC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CHA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CLA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CLAS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CON.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CONT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CONTI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CONTIN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CONTINU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        C.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CON.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        CONS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        D.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DEF.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DEFA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DEFAU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DEFAUL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        D.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        D.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DOU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DOUB.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        DOUBL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ELS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ENU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EX.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXP.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXPO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXPOR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXPORT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        E.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EX.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXTE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXTEN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        EXTEND.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FIN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FINA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FIN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FINA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FINAL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FINALL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FLO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FLOA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        F.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        FO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        G.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        GO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        GOT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IM.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMP.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPLE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPLEM.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPLEME.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPLEMEN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPLEMENT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IM.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMP.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IMPOR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INST.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INSTA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INSTAN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INSTANC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INSTANCE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INSTANCEO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        I.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        IN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INTE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INTER.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INTERF.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INTERFA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        INTERFAC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        L.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        LO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        LON.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        M.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        MO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        MOD.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        MODU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        MODUL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        N.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        NA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        NAT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        NATI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        NATIV.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        N.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        NE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PAC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PACK.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PACKA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PACKAG.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PRI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PRIV.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PRIVA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PRIVAT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PRO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PROT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PROTE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PROTEC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PROTECT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PROTECTE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        P.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PUB.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PUBL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        PUBLI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        R.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        RE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        REQ.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        REQU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        REQUI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        REQUIR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        REQUIRE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        R.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        RE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        RET.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        RETU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        RETUR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SHO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SHOR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ST.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STAT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STATI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        ST.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STRI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STRIC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STRICT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        STRICTF.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SU.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SUP.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SUPE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SW.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SWI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SWIT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SWITC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        S.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SY.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNC.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCHR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCHRO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCHRON.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCHRONI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCHRONIZ.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        SYNCHRONIZE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        THI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        THR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        THRO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        THR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        THRO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        THROW.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TRA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TRAN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TRANS.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TRANSI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TRANSIE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TRANSIEN.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        T.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        TR.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        V.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        V.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VOI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        V.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VO.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VOL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VOLA.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VOLAT.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VOLATI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        VOLATIL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        W.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        WH.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        WHI.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
        WHIL.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));

        VARSTATE.transitions.add(new StateTrans("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", VARSTATE));
    }
}
